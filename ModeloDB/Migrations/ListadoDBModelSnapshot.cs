// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(ListadoDB))]
    partial class ListadoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sistema_contador.Entidad.Aportes", b =>
                {
                    b.Property<int>("AportesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Sueldo_finalId")
                        .HasColumnType("int");

                    b.Property<double>("aporte_patronal_dado")
                        .HasColumnType("float");

                    b.Property<double>("aporte_personal_dado")
                        .HasColumnType("float");

                    b.Property<int>("tiempo_aportado")
                        .HasColumnType("int");

                    b.Property<string>("total_decimo_dado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AportesId");

                    b.HasIndex("Sueldo_finalId");

                    b.ToTable("aportes");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre_cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_funcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargoId");

                    b.HasIndex("NominaId");

                    b.ToTable("cargos");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Descuentos", b =>
                {
                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<int>("AportesId")
                        .HasColumnType("int");

                    b.HasKey("NominaId", "AportesId");

                    b.HasIndex("AportesId");

                    b.ToTable("Descuentos");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SueldoId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sueldosSueldoId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId");

                    b.HasIndex("CargoId");

                    b.HasIndex("sueldosSueldoId");

                    b.ToTable("empleados");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Nomina", b =>
                {
                    b.Property<int>("NominaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SueldoId")
                        .HasColumnType("int");

                    b.HasKey("NominaId");

                    b.HasIndex("SueldoId");

                    b.ToTable("nominas");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo", b =>
                {
                    b.Property<int>("SueldoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadoId1")
                        .HasColumnType("int");

                    b.Property<bool>("estado_sueldo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_pago")
                        .HasColumnType("datetime2");

                    b.Property<double>("sueldo_estipulado")
                        .HasColumnType("float");

                    b.HasKey("SueldoId");

                    b.HasIndex("EmpleadoId")
                        .IsUnique();

                    b.HasIndex("EmpleadoId1");

                    b.ToTable("sueldos");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo_final", b =>
                {
                    b.Property<int>("Sueldo_FinalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<double>("sueldo_anual_final")
                        .HasColumnType("float");

                    b.Property<double>("sueldo_base")
                        .HasColumnType("float");

                    b.Property<double>("sueldo_descontado")
                        .HasColumnType("float");

                    b.Property<double>("sueldo_recibido")
                        .HasColumnType("float");

                    b.Property<string>("tipo_decimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("total_decimo_recibido")
                        .HasColumnType("float");

                    b.HasKey("Sueldo_FinalId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("sueldo_finales");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Aportes", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Sueldo_final", "Sueldo_final")
                        .WithMany("Aportes")
                        .HasForeignKey("Sueldo_finalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sueldo_final");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Cargo", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Nomina", "Nomina")
                        .WithMany()
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Descuentos", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Aportes", "Aportes")
                        .WithMany()
                        .HasForeignKey("AportesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_contador.Entidad.Nomina", "Nomina")
                        .WithMany()
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aportes");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Empleado", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Cargo", "Cargo")
                        .WithMany("Empleado")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_contador.Entidad.Sueldo", "sueldos")
                        .WithMany()
                        .HasForeignKey("sueldosSueldoId");

                    b.Navigation("Cargo");

                    b.Navigation("sueldos");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Nomina", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Sueldo", null)
                        .WithMany("Nominas")
                        .HasForeignKey("SueldoId");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Empleado", "Empleado")
                        .WithOne("Sueldo")
                        .HasForeignKey("Sistema_contador.Entidad.Sueldo", "EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sistema_contador.Entidad.Empleado", null)
                        .WithMany("Sueldos")
                        .HasForeignKey("EmpleadoId1");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo_final", b =>
                {
                    b.HasOne("Sistema_contador.Entidad.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Cargo", b =>
                {
                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Empleado", b =>
                {
                    b.Navigation("Sueldo");

                    b.Navigation("Sueldos");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Sistema_contador.Entidad.Sueldo_final", b =>
                {
                    b.Navigation("Aportes");
                });
#pragma warning restore 612, 618
        }
    }
}
